project ::= packer-py
py ::= venv/bin/python
pip ::= venv/bin/pip
script = src/packer.py

define version !=
git describe --dirty=.dirty \
| sed 's/^v//' \
| sed 's/\([0-9\.]\+\)-\([0-9]\+\)-/\1.dev\2+/'
endef

ifneq ($(.SHELLSTATUS), 0)
$(error Could not determine version from git)
endif

.PHONY: dev
dev: version venv/ reqs
	$(pip) install -e .

.PHONY: version
version: $(script)
	@echo injecting version \'$(version)\' into \'$(script)\'
	sed -i 's/\(__version__ =\)\(.*\)/\1 "$(version)"  # generated by Makefile/' $(script)

.PHONY: sdist
sdist: version venv/
	$(py) setup.py sdist

.PHONY: egg
egg: version venv/
	$(py) setup.py bdist_egg

venv/bin/wheel: venv/
	$(pip) install wheel

.PHONY: wheel
wheel: venv/bin/wheel version
	$(py) setup.py bdist_wheel

.PHONY: venv
venv: venv/

venv/:
	python3.6 -m venv venv
	@echo "to activate, run 'source venv/bin/activate'"

.PHONY: reqs
reqs: venv/
	$(pip) install -r requirements.txt -r utils.txt

.PHONY: clean
clean:
	rm -rf build/ dist/ src/__pycache__ src/*.egg-info venv/

.PHONY: fail-dirty
fail-dirty:
	@echo $(version) | grep -v dirty || \
	  (echo "dirty version $(version)" && exit 1)

.PHONY: release
release: fail-dirty clean sdist wheel egg
